:where([role="group"].toggle-button-group) {
  --_border-radius: 4px;
  --_max-width: auto;

  background-color: var(--surface-default);
  border-radius: var(--_border-radius);
  display: inline-flex;
  max-inline-size: var(--_max-width);
  min-inline-size: max-content;

  /* Dynamic width on buttons */
  &.dynamic {
    button {
      flex: auto;
    }
  }

  /* Size */
  &.small {
    button {
      min-block-size: 2.1875rem; /* 35px */
    }
  }

  &.x-small {
    button {
      min-block-size: var(--size-6); /* 30px */
    }
  }

  /* Button */
  button {
    --_bg-color: transparent;

    align-items: center;
    background: var(--_bg-color) var(--ripple, none);
    border-radius: 0;
    border: 1px solid var(--border-color);
    color: var(--text-color-1);
    display: inline-flex;
    flex: 1;
    gap: 1ex;
    justify-content: center;
    min-block-size: 2.5rem; /* 40px */
    min-inline-size: 5ex;
    padding: 0 var(--size-4);
    user-select: none;

    &:hover {
      --_bg-color: light-dark(oklch(0% 0 0 / 0.04), oklch(100% 0 0 / 0.08));
    }

    & + & {
      border-inline-start-width: 0;
    }

    &:first-of-type {
      border-bottom-left-radius: var(--_border-radius);
      border-top-left-radius: var(--_border-radius);
    }
    &:last-of-type {
      border-bottom-right-radius: var(--_border-radius);
      border-top-right-radius: var(--_border-radius);
    }

    &[disabled] + &:not([disabled]) {
      border-inline-start-width: 1px;
    }

    /* Ripple effect */
    background-position: center;

    &:where(:not(.disabled, [disabled])) {
      &:where(:not(:active):hover) {
        --ripple: radial-gradient(circle, transparent 1%, var(--_bg-color) 1%)
          center/15000%;

        transition: background var(--button-ripple-duration);
      }

      &:where(:hover:active) {
        background-size: var(--button-ripple-size);
        transition: background 0s;
      }
    }

    /* Disabled */
    &[disabled] {
      border-color: color-mix(in oklch, var(--border-color) 50%, transparent);
      cursor: not-allowed;
      color: color-mix(in oklch, var(--text-color-1) 30%, transparent);
    }

    /* Icons */
    svg {
      flex-shrink: 0;
      inline-size: var(--size-4);

      & + svg {
        max-block-size: var(--size-5);
        max-inline-size: var(--size-7);
      }
    }

    /* Selected */
    &.selected {
      --_bg-color: color-mix(
        in oklch,
        var(--primary) 12%,
        var(--surface-default)
      );

      /* Checkmark */
      svg:first-of-type {
        margin-block-end: -3px;
      }
    }
  }
}
