/*
- Common styling for input, textarea and select
- Form related styles such as: label, supporting text, error handling
*/
:where(.field) {
  --_accent-color: var(--primary);
  --_bg-color: var(--surface-default);
  --_border-color: var(--input-border-color);
  --_field-padding-block: 0.75rem;
  --_field-padding-inline: var(--size-2);
  --_filled-border-color: var(--text-color-1);
  --_height: 2.875em;
  --_label-color: var(--text-color-2);
  --_supporting-text-color: var(--text-color-2);

  display: inline-grid;
  position: relative;

  /* Input/Select base */
  & > input,
  & > textarea,
  & > select {
    background-color: var(--_bg-color);
    block-size: var(--_height);
    border-radius: var(--input-border-radius);
    border: var(--input-border-width) solid var(--_border-color);
    color: var(--text-color-1);
    font-family: var(--font-sans);
    font-size: var(--font-size-1);
    grid-column: 1/-1;
    grid-row: 1;
    line-height: var(--font-lineheight-1);
    min-inline-size: 0;
    padding: var(--_field-padding-block) var(--_field-padding-inline);
    width: 100%;

    @media (prefers-reduced-motion: no-preference) {
      transition:
        border-color 0.2s cubic-bezier(0.4, 0, 0.2, 1),
        padding-block 0.2s var(--ease-3);
    }
  }

  /* Experimental Select */
  &:has(> select button) {
    select {
      padding: 0;

      button {
        outline: 0;
        padding: var(--_field-padding-block) var(--size-8)
          var(--_field-padding-block) var(--_field-padding-inline);
      }
    }
  }

  /* Select */
  &:has(> select) {
    &:not(:has(button)) {
      /* Non-experimental Select */
      select {
        padding: var(--_field-padding-block) var(--size-8)
          var(--_field-padding-block) var(--_field-padding-inline);
      }
    }

    /* Label */
    .label {
      /* Make sure arrow is visible */
      inline-size: calc(100% - var(--size-6));
    }
  }

  /* Textarea */
  &:has(> textarea) {
    .label {
      align-self: start;
      margin-block-start: var(--_field-padding-block);
    }
  }

  /* Variant: Outlined  */
  &:not(.filled) {
    /* Element states */
    &:hover {
      &:where(> input, > textarea, > select) {
        border-color: var(--text-color-1);
      }
    }
  }

  /* Focus */
  &:not(.filled):focus-within {
    & > input,
    & > textarea,
    & > select {
      border-color: var(--_accent-color);
      outline-offset: 0;
      outline: 2px solid var(--_accent-color);
    }
  }

  /* Label */
  .label {
    align-self: center;
    background-color: var(--_bg-color);
    color: var(--_label-color);
    border-radius: var(--radius-1);
    display: inline-flex;
    font-size: var(--font-size-md);
    grid-column: 1/-1;
    grid-row: 1;
    inline-size: calc(100% - (var(--input-border-width) * 2));
    margin-inline-start: var(--input-border-width);
    padding-inline: var(--_field-padding-inline);
    pointer-events: none;
    z-index: 1;

    @media (prefers-reduced-motion: no-preference) {
      transition:
        font-size 0.2s var(--ease-3),
        inline-size 0.05s var(--ease-3),
        margin 0.2s var(--ease-3),
        padding-inline 0.2s var(--ease-3);
    }
  }

  /* Label transitions */
  &:focus-within,
  &:has(:where(input, textarea):not(:placeholder-shown)),
  &:has(option[value=""]:not(:checked)) {
    .label {
      color: var(--_accent-color);
      font-size: 0.75rem;
      inline-size: max-content;
      letter-spacing: 0.15px;
      line-height: 1;
      margin-block-start: calc(-1 * var(--size-8));
      margin-inline-start: calc(var(--_field-padding-inline) / 2);
      padding-inline: calc(var(--_field-padding-inline) / 2);
    }

    &:has(> textarea) {
      .label {
        margin-block-start: calc(-1 * var(--size-2));
      }
    }
  }

  /* Supporting text */
  .supporting-text {
    color: var(--_supporting-text-color);
    font-size: var(--font-size-xs);
    grid-row: 3;
    line-height: 1.5;
    margin-inline-start: var(--input-border-width);
    padding-inline: var(--_field-padding-inline);
  }

  /* Auto-fit */
  &.auto-fit {
    width: auto;
    :where(& > input, & > textarea) {
      field-sizing: content;
    }
  }

  /* Validation */
  &.bad {
    --_accent-color: var(--color-9);
    --_border-color: var(--color-9);
    --_filled-border-color: var(--color-9);
    --_label-color: var(--color-9);
    --_supporting-text-color: var(--color-9);
  }

  /* Variant: Filled */
  &.filled {
    --_bg-color: var(--surface-tonal);
    *:focus-visible {
      outline: 0;
    }

    /* Base style */
    & > input,
    & > textarea,
    & > select {
      border-block-end-color: var(--_filled-border-color);
      border-block-start-color: transparent;
      border-inline-color: transparent;
      border-radius: 0;
    }

    /* Bottom line */
    &:before {
      background-color: var(--_filled-border-color);
      block-size: calc(var(--input-border-width) + 1px);
      content: "";
      inline-size: 100%;
      margin-block-end: calc(-1 * (var(--input-border-width) * 2));
      transform: scaleX(0);
      translate: 0 calc(-1 * (var(--input-border-width) * 2));
      z-index: 1;

      @media (prefers-reduced-motion: no-preference) {
        transition:
          transform 0.3s var(--ease-3),
          translate 0.2s var(--ease-3);
      }
    }

    /* Label */
    .label {
      background-color: var(--_bg-color);
    }

    &:not(:has([disabled])) {
      /* Hover */
      &:hover {
        --_bg-color: light-dark(
          oklch(from var(--surface-tonal) calc(l * 0.93) c h),
          oklch(from var(--surface-tonal) calc(l * 1.1) c h)
        );
      }
    }

    /* Label transitions */
    &:has(.label) {
      &:focus-within,
      &:has(:where(input, textarea):not(:placeholder-shown)),
      &:has(option[value=""]:not(:checked)) {
        :where(input, textarea) {
          padding-block: calc(var(--_field-padding-block) * 1.8)
            calc(var(--_field-padding-block) * 0.2);
        }

        select > button,
        select:not(:has(> button)) {
          padding-block: calc(var(--_field-padding-block) * 1.8)
            calc(var(--_field-padding-block) * 0.2);
        }

        .label {
          margin-block-start: calc(-1 * var(--size-5));
        }

        &:has(> textarea) {
          .label {
            margin-block-start: var(--size-1);
          }
        }
      }
    }

    /* Element states */
    &:hover {
      &:before {
        transform: scaleX(1);
      }
    }
    &:focus-within {
      & > input,
      & > textarea,
      & > select {
        border-block-end-color: var(--_accent-color);
      }

      &:before {
        background-color: var(--_accent-color);
        transform: scaleX(1) translateX(0px);
      }
    }
  }

  /* Disabled */
  &:where(:has([disabled])) {
    &:before {
      display: none;
    }
    :where(input, textarea, select) {
      cursor: not-allowed;
      opacity: 0.7;

      * {
        pointer-events: none;
      }
    }
  }

  /* Read-only */
  &:where(:has([readonly])) {
    &:before {
      display: none;
    }
    :where(input, textarea, select) {
      cursor: not-allowed;

      * {
        pointer-events: none;
      }
    }
  }

  /* Sizes */
  &.small {
    --_field-padding-block: var(--size-2);
    --_height: 2.375em;

    /* Label transitions */
    &:focus-within,
    &:has(:where(input, textarea):not(:placeholder-shown)),
    &:has(option[value=""]:not(:checked)) {
      .label {
        margin-block-start: -2.5rem;
        margin-inline-start: var(--size-1);
        padding-inline: var(--size-1);
      }
    }
  }
}
