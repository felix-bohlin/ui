/*
- Common styling for text inputs, textareas and selects
- Form related styles such as: labels, validation text, error handling
*/
:where(.field) {
  display: inline-grid;
  position: relative;

  :where(& > input, & > textarea, & > select) {
    background-color: var(--surface-default);
    border-radius: var(--input-border-radius);
    border: var(--input-border-width) solid var(--input-border-color);
    font-family: var(--font-sans);
    font-size: var(--font-size-1);
    grid-column: 1/-1;
    grid-row: 1;
    line-height: var(--font-lineheight-1);
    min-inline-size: 0;
    padding: var(--size-2);
    transition:
      background-color 0.15s var(--ease-2),
      border-color 0.15s var(--ease-2);
    width: 100%;
  }

  /* Remove outline */
  &:has(.label) {
    *:focus-visible {
      outline: 0;
    }
  }

  /* Label */
  :where(.label) {
    align-self: center;
    background-color: var(--surface-default);
    border-radius: var(--radius-1);
    display: inline-flex;
    font-size: var(--font-size-md);
    grid-column: 1/-1;
    grid-row: 1;
    inline-size: calc(100% - (var(--input-border-width) * 2));
    margin-inline-start: var(--input-border-width);
    padding-inline: var(--size-2);
    transition:
      background-color 0.15s var(--ease-2),
      font-size 0.2s var(--ease-2),
      inline-size 0.05s var(--ease-2),
      margin 0.2s var(--ease-2),
      padding-inline 0.2s var(--ease-2);
    z-index: 1;
  }

  &:focus-within {
    .label {
      font-size: 0.75rem;
      inline-size: max-content;
      line-height: 1;
      margin-block-start: -2.5rem;
      margin-inline-start: var(--size-1);
    }
  }

  /* Caption */
  :where(.caption) {
    font-size: var(--font-size-xs);
    grid-row: 3;
    line-height: 1.5;
    margin-block-start: 0.125rem;
  }

  /* Auto-fit */
  &.auto-fit {
    width: auto;
    :where(& > input, & > textarea) {
      field-sizing: content;
    }
  }

  /* Variants */
  &.filled {
    :where(& > input, & > textarea, & > select) {
      background-color: var(--surface-tonal);
      border-block-end-color: var(--text-color-1);
      border-block-start-color: transparent;
      border-radius: 0;
    }

    /* Bottom line */
    &:before {
      background-color: var(--text-color-1);
      block-size: var(--input-border-width);
      content: "";
      inline-size: 100%;
      inset: auto 0 0 0;
      position: absolute;
      transition: inset 0.2s var(--ease-3);
      z-index: 1;
    }

    & > select:before {
      inset: auto 0 calc(0px - var(--input-border-width)) 0;
    }

    /* Label */
    :where(.label) {
      background-color: var(--surface-tonal);
    }

    &:where(:not(:has([disabled]))) {
      /* Hover */
      &:hover {
        :where(& > input, & > textarea, & > select) {
          background-color: light-dark(
            color-mix(in oklch, var(--surface-tonal) 93%, black),
            color-mix(in oklch, var(--surface-tonal) 93%, white)
          );
        }

        .label {
          background-color: light-dark(
            color-mix(in oklch, var(--surface-tonal) 93%, black),
            color-mix(in oklch, var(--surface-tonal) 93%, white)
          );
        }
      }

      &:has(> input, > textarea, > select):hover:before {
        inset-block-end: var(--input-border-width);
      }
    }
  }

  /* Disabled */
  &:where(:has([disabled])) {
    &:before {
      display: none;
    }
    :where(input, textarea, select) {
      cursor: not-allowed;
      opacity: 0.7;

      * {
        pointer-events: none;
      }
    }
  }

  /* Read-only */
  &:where(:has([readonly])) {
    &:before {
      display: none;
    }
    :where(input, textarea, select) {
      cursor: not-allowed;

      * {
        pointer-events: none;
      }
    }
  }

  /* Sizes */
  &.small {
    &:focus-within {
      .label {
        margin-block-start: -1.9rem;
        margin-inline-start: var(--size-1);
        padding-inline: var(--size-1);
      }
    }
  }
}
